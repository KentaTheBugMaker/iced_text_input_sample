name: Build and Make release
on:
  push:
    branches:
      - master
jobs:
  init_page:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@master
      - name: get current time.
        env:
          TZ: "Asia/Tokyo" # タイムゾーン指定
        run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Create release page to attach binaries.
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{ github.run_number}}
          release_name: Build at ${{ env.CURRENT_DATETIME}}
          draft: false
          prerelease: false
  iced_text_input_sample_linux:
    runs-on: ubuntu-22.04
    needs: init_page
    steps:
      - uses: hecrj/setup-rust-action@v1
      - name: Install cargo-deb
        run: cargo install cargo-deb
      - uses: actions/checkout@master
      - name: Install dependencies
        run: |
          export DEBIAN_FRONTED=noninteractive
          sudo apt-get -qq update
          sudo apt-get install -y libxkbcommon-dev
      - name: Build iced_text_input_sample binary
        run: cargo build --release
      - name: Pack iced_text_input_sample .deb package
        run: cargo deb --no-build --profile release --package iced_text_input_sample
      - name: prepare for pickup package
        run: mv target/debian/*.deb target/debian/sample_ubuntu2204_amd64.deb
      - name: pickup .deb package
        run: cp target/debian/sample_ubuntu2204_amd64.deb sample_ubuntu_2204_amd64.deb
      - name: pickup sample for other linux
        run: cp target/release/iced_text_input_sample sample_linux_amd64
      - name: Upload linux executable
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.init_page.outputs.id }}
          args: "sample*"

  iced_text_input_sample_windows:
    runs-on: windows-latest
    needs: init_page
    steps:
      - uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@master
      - name: Enable static CRT linkage
        run: |
          mkdir .cargo
          echo '[target.x86_64-pc-windows-msvc]' >> .cargo/config
          echo 'rustflags = ["-Ctarget-feature=+crt-static"]' >> .cargo/config
      - name: Run the application without starting the shell
        run: |
          sed -i '1 i\#![windows_subsystem = \"windows\"]' src/main.rs
      - name: Build iced_text_input_sample binary
        run: cargo build --release
      - name: Rename iced_text_input_sample
        run: ren target/release/iced_text_input_sample.exe sample.exe
      - name: Archive iced_text_input_sample binary
        uses: actions/upload-artifact@v2
        with:
          name: iced_text_input_sample-windows-x64
          path: target/release/sample.exe
  iced_text_input_sample_macos:
    runs-on: macos-latest
    needs: init_page
    steps:
      - uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@master
      - name: Build iced_text_input_sample binary
        env:
          MACOSX_DEPLOYMENT_TARGET: 10.14
        run: cargo build --release
      - name: Rename binary
        run: mv target/release/iced_text_input_sample target/release/sample
      - name: pickup binary
        run: cp target/release/sample sample
      - name: Open binary via double-click
        run: chmod +x sample

      - name: Archive iced_text_input_sample binary
        uses: actions/upload-artifact@v2
        with:
          name: sample-macos-x64
          path: sample
  publish_binaries_macos:
    name: Publish binaries.
    runs-on: ubuntu-latest
    needs: [iced_text_input_sample_macos, init_page]
    steps:
      - name: accept binary from macos builder
        uses: actions/download-artifact@v2
        with:
          name: sample-macos-x64
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.init_page.outputs.id }}
          args: "sample*"

  publish_binaries_windows:
    name: Publish binaries.
    runs-on: ubuntu-latest
    needs: [iced_text_input_sample_windows, init_page]
    steps:
      - name: accept binary from windows builder
        uses: actions/download-artifact@v2
        with:
          name: sample-windows-x64
      - name: Upload the artifacts
        uses: skx/github-action-publish-binaries@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.init_page.outputs.id }}
          args: "sample.exe"
